name: Deploy Verification

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-and-verify:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for git tags
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests
    
    - name: Get version
      id: version
      run: |
        VERSION=$(python version.py | grep "Version:" | cut -d' ' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build \
          --build-arg APP_VERSION=${{ steps.version.outputs.version }} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg BUILD_ID=${{ github.run_id }} \
          -t sbh:${{ steps.version.outputs.version }} .
    
    - name: Start container
      run: |
        docker run -d \
          --name sbh-test \
          -p 5001:5001 \
          -e FLASK_ENV=testing \
          -e LLM_SECRET_KEY=dGVzdC1rZXktZm9yLXRlc3Rpbmctc2VjcmV0cy0xMjM= \
          -e DATABASE_URL=sqlite:///./db/sbh.db \
          sbh:${{ steps.version.outputs.version }}
        
        # Wait for container to start
        sleep 10
    
    - name: Run deployment verification
      run: |
        python scripts/deploy_verify.py http://localhost:5001 --timeout 30
    
    - name: Run smoke tests
      run: |
        python scripts/smoke.py http://localhost:5001
    
    - name: Stop container
      if: always()
      run: |
        docker stop sbh-test || true
        docker rm sbh-test || true
    
    - name: Push to registry (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
        # Tag for registry
        docker tag sbh:${{ steps.version.outputs.version }} ${{ secrets.DOCKER_REGISTRY }}/sbh:${{ steps.version.outputs.version }}
        docker tag sbh:${{ steps.version.outputs.version }} ${{ secrets.DOCKER_REGISTRY }}/sbh:latest
        
        # Push to registry
        docker push ${{ secrets.DOCKER_REGISTRY }}/sbh:${{ steps.version.outputs.version }}
        docker push ${{ secrets.DOCKER_REGISTRY }}/sbh:latest
    
    - name: Create release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          ## System Builder Hub ${{ steps.version.outputs.version }}
          
          ### What's New
          - Version ${{ steps.version.outputs.version }}
          - Build ID: ${{ github.run_id }}
          
          ### Deployment
          ```bash
          docker pull ${{ secrets.DOCKER_REGISTRY }}/sbh:${{ steps.version.outputs.version }}
          ```
          
          ### Verification
          All deployment verification tests passed âœ…
        draft: false
        prerelease: false

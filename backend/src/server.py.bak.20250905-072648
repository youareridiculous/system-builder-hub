#!/usr/bin/env python3
"""System Builder Hub - Stable Server Entrypoint"""

import os
import logging
from flask import Flask, jsonify
from flask_cors import CORS

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def create_app():
    """Create Flask application with stable imports"""
    app = Flask(__name__)
    
    # Basic configuration
    app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'dev-secret-key')
    app.config['DEBUG'] = os.getenv('FLASK_ENV') == 'development'
    
    # Enable CORS
    CORS(app)
    
    # Health routes
    @app.route('/api/health')
    def health():
        return jsonify({"ok": True, "status": "healthy"})
    
    @app.route('/readiness')
    def readiness():
        return jsonify({"ok": True, "status": "ready"})
    
    @app.route('/healthz')
    def healthz():
        return jsonify({"ok": True, "status": "healthy"})
    
    # Register blueprints with absolute imports
    try:
        from src.cobuilder.api import cobuilder_bp
        app.register_blueprint(cobuilder_bp, url_prefix="/api/cobuilder")
        logger.info("✅ Registered blueprint: cobuilder")
    except Exception as e:
        logger.error(f"❌ Failed to register cobuilder blueprint: {e}")
    
    # Basic routes
    @app.route('/')
    def index():
        return jsonify({
            "name": "System Builder Hub",
            "version": "1.0.0",
            "status": "running"
        })
    
    return app

if __name__ == '__main__':
    # Get port from environment or default to 5001
    port = int(os.getenv('PORT', 5001))
    
    # Create and run app
    app = create_app()
    
    # Use reloader only in development
    use_reloader = os.getenv('FLASK_ENV') == 'development'
    
    logger.info(f"Starting server on port {port} (reloader={use_reloader})")
    app.run(
        host='127.0.0.1',
        port=port,
        debug=use_reloader,
        use_reloader=use_reloader
    )

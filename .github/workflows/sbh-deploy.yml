name: SBH Deploy (No Docker)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ vars.ECR_REPO }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  TASK_DEFINITION_FAMILY: sbh-task-dev
  APP_URL: ${{ vars.APP_URL }}
  S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}

permissions:
  id-token: write      # required for OIDC assume-role
  contents: read       # read source
  packages: write      # if using GHCR or actions that need write

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy SBH Backend (No Docker Build)
      run: |
        echo "üöÄ Deploying SBH Backend (No Docker Build Required)"
        
        # Use the new task definition with fixed health check
        echo "‚úÖ Using task definition sbh-task-dev:107 (with fixed health check)"
        
        # Update ECS service to use the new task definition
        echo " Updating ECS service to use new task definition..."
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --task-definition $TASK_DEFINITION_FAMILY:107 \
          --output table

    - name: Wait for deployment to stabilize
      run: |
        echo "‚è≥ Waiting for deployment to stabilize..."
        aws ecs wait services-stable --cluster $ECS_CLUSTER --services $ECS_SERVICE
        echo "‚úÖ Deployment completed successfully"

    - name: Check health endpoint
      run: |
        echo "üè• Checking health endpoint..."
        for i in {1..30}; do
          HEALTH=$(curl -s $APP_URL/api/ai-chat/health | jq -r '.status // false');
          if [ "$HEALTH" = "healthy" ]; then
            echo "‚úÖ Health check passed";
            curl -s $APP_URL/api/ai-chat/health | jq .
            break;
          fi;
          echo "Attempt $i: Health check failed, retrying in 10 seconds...";
          sleep 10;
        done
        
        if [ "$HEALTH" != "healthy" ]; then 
          echo "‚ùå Health check failed after 30 attempts"; 
          exit 1; 
        fi

    - name: Deployment summary
      run: |
        echo " Deployment Summary"
        echo "Service: $ECS_CLUSTER/$ECS_SERVICE"
        echo "URL: $APP_URL/api/ai-chat/health"
        echo "‚úÖ SBH Backend deployed successfully (No Docker build required)"
